{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Cweet.js","components/CweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","errormsg","message","console","log","type","placeholder","required","styles","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","Cweet","cweetObj","isOwner","fromProf","editing","setEditing","text","newCweet","setNewCweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","className","src","CweetFactory","userObj","attachment","setAttatchment","cweet","setCweet","attatchmentRef","ref","child","uid","uuid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","File","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","width","height","Home","cweets","setCweets","useEffect","onSnapshot","snapshot","cweetArray","docs","map","Profile","refreshUser","myCweets","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyCweets","where","orderBy","get","myCweetObject","updateProfile","signOut","push","Navigation","to","TwitRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8437253.chunk.js","sourcesContent":["import { fireEvent } from \"@testing-library/react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n//import * as emailjs from 'emailjs-com';\r\nimport PropTypes from 'prop-types';\r\nimport 'styles/Styles.css';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    /*emailjs.init(\"user_qZI9l13HagISOtHrtwC3r\");\r\n\r\n    const mailHandler = (event, MailTo) => {\r\n        event.preventDefault();\r\n\r\n        let templateParams = {\r\n            from_name: process.env.MY_MAIL,\r\n            to_name: `<${MailTo}>`,\r\n            subject: 'Sign In Announcement from Cwitter',\r\n            message_html: ''\r\n        }\r\n\r\n        emailjs.send(\r\n            'naver',\r\n            'template_c2fnq3i',\r\n            templateParams,\r\n            'user_qZI9l13HagISOtHrtwC3r'\r\n        )\r\n    }*/\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                //create\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n                //mailHandler(email);\r\n            } else {\r\n                //log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch(error) {\r\n            var errormsg = error.message;\r\n            setError(errormsg);\r\n            console.log(errormsg);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span styles=\"color: red;\">error</span>}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import React from 'react';\r\nimport { firebaseInstance, authService } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport \"styles/Styles.css\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\r\n                <button name=\"github\" onClick={onSocialClick}>Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport 'styles/Styles.css';\r\n\r\nconst Cweet = ({ cweetObj, isOwner, fromProf }) => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newCweet, setNewCweet] = useState(cweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this cweet?\");\r\n        if(ok) {\r\n            await dbService.doc(`tweets/${cweetObj.id}`).delete();\r\n            await storageService.refFromURL(cweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${cweetObj.id}`).update({\r\n            text: newCweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setNewCweet(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        {isOwner && (\r\n                            <>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder=\"Edit your cweet\"\r\n                                    value={newCweet}\r\n                                    onChange={onChange}\r\n                                    required\r\n                                />\r\n                                <input type=\"submit\" value=\"Update Cweet\" />\r\n                            </>\r\n                        )}\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4 className=\"cweet__txt\">{cweetObj.text}</h4>\r\n                    {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} className=\"cweet_img\" />}\r\n                    {(isOwner && !fromProf) && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Cweet</button>\r\n                            <button onClick={toggleEditing}>Edit Cweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport \"styles/Styles.css\"\r\n\r\nconst CweetFactory = ({ userObj }) => {\r\n    const [attachment, setAttatchment] = useState(\"\");\r\n    const [cweet, setCweet] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        let attachmentUrl = \"\";\r\n\r\n        if(attachment !== \"\") {\r\n            const attatchmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuid()}`);\r\n            const response = await attatchmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const cweetObj = {\r\n            text: cweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n\r\n        await dbService.collection(\"tweets\").add(cweetObj);\r\n        setCweet(\"\");\r\n        setAttatchment(\"\");\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target:{value} } = event;\r\n        setCweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {    \r\n        const { target:{files} } = event;\r\n        const File = files[0];\r\n        const reader = new FileReader();\r\n        \r\n        reader.onloadend = (finishedEvent) => {\r\n            const { target: { result }} = finishedEvent;\r\n            setAttatchment(result);\r\n        }\r\n\r\n        reader.readAsDataURL(File);\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setAttatchment(null);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={cweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Cweet\" />\r\n\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"130px\" height=\"90px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default CweetFactory;","import { dbService } from 'fbase';\r\nimport Cweet from 'components/Cweet';\r\nimport React, {useEffect, useState} from 'react';\r\nimport CweetFactory from 'components/CweetFactory';\r\nimport \"styles/Styles.css\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [cweets, setCweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n            const cweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id, ...doc.data()\r\n            }));\r\n            setCweets(cweetArray);\r\n            console.log(cweetArray);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <CweetFactory userObj={userObj} />\r\n            <div className=\"cweets\">\r\n                {cweets.map((cweet) => (\r\n                    <div className=\"cweet\">\r\n                        <Cweet\r\n                            key={cweet.id}\r\n                            cweetObj={cweet}\r\n                            isOwner={cweet.creatorId === userObj.uid}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from 'fbase';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Cweet from 'components/Cweet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"styles/Styles.css\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const [myCweets, setCweets] = useState([]);\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getMyCweets = async () => {\r\n        const cweets = await dbService\r\n            .collection(\"tweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        const myCweetObject = cweets.docs.map((doc) => doc.data());\r\n        setCweets(myCweetObject);\r\n        console.log(myCweets);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyCweets();\r\n    }, []);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            //update\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value=\"Update profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Sign Out</button>\r\n\r\n            {myCweets.map((cweet) => (\r\n                <div className=\"cweet\">\r\n                    <Cweet\r\n                        key={cweet.id}\r\n                        cweetObj={cweet}\r\n                        isOwner={cweet.creatorId === userObj.uid}\r\n                        fromProf={true}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'styles/Styles.css';\r\n\r\nconst Navigation = ({ displayName }) => (\r\n    <nav>\r\n        <ul className=\"nav\">\r\n            <li>\r\n                <Link to=\"/\" className=\"nav_prop\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\" className=\"nav_prop\">{displayName}'s Profile</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst TwitRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation displayName={userObj.displayName} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                    )\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default TwitRouter;","import React, { useEffect, useState } from 'react';\nimport TwitRouter from 'components/Router';\nimport { authService } from 'fbase';\nimport 'styles/Styles.css';\n\nfunction App() {\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n            displayName : user.displayName,\n            uid: user.uid,\n            updateProfile : (args) => user.updateProfile(args)\n        });\n      } else {\n        setIsLoggedIn(false)\n        setUserObj({\n          displayName: \"\"\n        });\n      }\n      setInit(true);\n    })\n  }, []);\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName : user.displayName,\n      uid: user.uid,\n      updateProfile : (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <>\n      {init ? (\n        <TwitRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n       ) : (\n        <div className=\"init\">\n          <span className=\"init_txt\">Initializing...</span>\n        </div>\n       )\n       }\n      <footer>&copy; {new Date().getFullYear()} Cwitter</footer>\n    </>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}